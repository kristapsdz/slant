<!DOCTYPE html>
<html lang="en">
	<head>
		<meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
		<meta charset="utf-8" /> 
		<title>slant: remote system monitor</title>
		<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Alegreya+Sans:100,400,400italic,500" />
		<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css" />
		<link rel="stylesheet" href="index.css" />
		<script src="index.js"></script>
	</head>
	<body itemscope="itemscope" itemtype="http://schema.org/SoftwareApplication">
		<header>
			<div>
				<h1 itemprop="name">slant</h1>
				<div class="title">a <a href="https://bsd.lv">BSD.lv</a> project by CAPEM</div>
			</div>
			<nav>
				<a href="https://github.com/kristapsdz/slant"><i class="fa fa-fw fa-github"></i></a>
				<a href="#overview">overview</a>
				<a href="#news">news</a>
				<a href="#about">about</a>
				<a class="hilite" href="#download">download</a>
			</nav>
		</header>
		<article>
			<div class="tagline" itemprop="description">
				a minimal open source system monitor for remote <span itemprop="operatingSystem">UNIX</span> machines
			</div>
			<div class="version">
				<nav data-sblg-nav="1" data-sblg-navxml="1" data-sblg-navsz="1">
					version: <span>${sblg-titletext}</span>, released <span>${sblg-date}</span>
				</nav>
			</div>
			<figure class="screens">
				<div class="popup" id="screen2">
					<div class="pop"><img src="screen2.jpg" alt="screenshot" /></div>
					<img src="screen2.jpg" alt="screenshot" />
				</div>
				<div class="popup" id="screen1">
					<div class="pop"><img src="screen1.jpg" alt="screenshot" /></div>
					<img src="screen1.jpg" alt="screenshot" />
				</div>
				<div class="popup" id="screen3">
					<div class="pop"><img src="screen3.jpg" alt="screenshot" /></div>
					<img src="screen3.jpg" alt="screenshot" />
				</div>
			</figure>
			<h2 id="overview">overview</h2>
			<p>
				<span class="nm">Slant</span> is an <a
					href="http://opensource.org/licenses/ISC" rel="license">open
					source</a>, minimal <span itemprop="applicationCategory">remote system monitor</span>.
				It models host fitness via a set of numeric quantifiers, for
				instance, CPU usage quantified as a percent average over all CPUs,
				memory usage over available memory, number of processes over maximum
				configured, etc.
				For past behaviour, <span class="nm">slant</span> maintains a set of
				time-interval-bound circular queues (hourly, daily, etc.) with
				current data aggregated into each time series.
				An important design decision of <span class="nm">slant</span> is
				that each monitoring host retains its own [bounded] history.
			</p>
			<p>
				<span class="nm">Slant</span> is <strong>not</strong> designed for 
				detailed analysis: there are plenty of other tools for that.  
				(<a href="https://mmonit.com/monit/">Monit</a>, 
				 <a href="https://zabbix.org">zabbix</a>, etc.)
			</p>
			<p>
				The current version of <span class="nm">slant</span> has a single
				graphing front-end inspired by <a href="https://man.openbsd.org/top.1">top</a>.
				The goal of this tool is to answer, at a single glance, the question
				of <q>has anything gone to hell with my systems</q>.
			</p>
			<h3 id="operation">operation</h3>
			<p>
				<span class="nm">Slant</span> currently runs on <a
					href="https://www.openbsd.org">OpenBSD</a> only.  It's
				currently being ported to some other UNIX (especially BSD) systems.
				The source code is in clean, well-documented C code.
			</p>
			<p>
				There are two main components of the <span class="nm">slant</span>
				system.
				The first is the server; the second is the client.
			</p>
			<figure class="graphs" id="index1">
				<img src="index1.svg" />
			</figure>
			<p>
				The server is divided into a collector, <a
					href="slant-collectd.8.html">slant-collectd(8)</a>, which
				collects system statistics and writes to a database; and a CGI
				script, <a href="slant-cgi.8.html">slant-cgi(8)</a>, which exports
				the database to clients.
				The collector is a simple daemon that interacts with an <a
					href="https://sqlite.org">SQLite</a> database via <a
					href="https://kristaps.bsd.lv/ksql">ksql</a>.
				The database is well-documented and consists of a set of circular
				buffers for accumulating historical data.
				(There is also an instantaneous buffer, which <q>averages</q> only
				the last entry.)
				The database is in practise bounded in size, seeming to average in
				size to 50K.
				The full transmitted JSON output is about 100K, compressed 17K.
				The JSON is well-documented in  <a
					href="slant-cgi.8.html">slant-cgi(8)</a>.
			</p>
			<p>
				The current client, <a href="slant.1.html">slant(1)</a>, is a
				fully-configurable <a
					href="https://man.openbsd.org/ncurses.3">ncurses</a> system.
				It has simple defaults for laying out monitored data (according to
				screen size), and all output may be customised in the configuration
				file.
				The utility and its configuration are well-documented in <a
					href="slant.1.html">slant(1)</a>.
			</p>
			<h3 id="data">data</h3>
			<p>
				<span class="nm">Slant</span> collects enough data to minimally represent system health.
				A strong focus is on data being finite and bounded: many other
				system monitors collect and store vast amounts of information.
				A design goal of <span class="nm">slant</span> is to be small and light.
				For the time being, the following are present as both instantaneous and past averages:
			</p>
			<ul>
				<li>
					<strong>processor</strong>:
					percentage of non-idle processor time averaged over all processing units
				</li>
				<li>
					<strong>memory</strong>:
					percentage of active over available memory
				</li>
				<li>
					<strong>network</strong>:
					inbound and outbound network traffic averaged over configured interfaces
				</li>
				<li>
					<strong>disc</strong>:
					reads and writes averaged over configured interfaces
				</li>
				<li>
					<strong>processes</strong>:
					percentage of running over possible processes
				</li>
				<li>
					<strong>runnables</strong>:
					percentage of configured processes (e.g., <q>sshd</q>) currently running
				</li>
				<li>
					<strong>files</strong>:
					percentage of used over available open files
				</li>
			</ul>
			<p>
				Beyond numerical (<q>aggregatable</q>) data, <span
					class="nm">slant</span> also records the system boot time, operating
				system information (architecture, version, release), and timestamp for 
				computing clock drift.
			</p>
			<p>
				Data represented by <span class="nm">slant</span> has three types.
				The first is aggregatable and always numerical.
				This, like CPU percentage, may be aggregated over time intervals for
				examining historical average records.
				The second is start-time data, which is set when the collector daemon starts.
				This is hardware configuration, system boot information, collector version, etc.
				The last is non-aggregatable instantaneous information, for example,
				a list of all processes.
				At this time, <span class="nm">slant</span> collects no
				instantaneous and little start-time data.
				This is intentional: the focus is on aggregatables.
			</p>
			<h2 id="download">download</h2>
			<p>
				The current version is always available at <a itemprop="downloadURL"
					href="snapshots/slant.tar.gz">snapshots/slant.tar.gz</a>.
				Just unpack the source, configure with <code>./configure</code>, then 
				run <code>make</code>.
				Lastly, run <code>make install</code> as root.
				Then make sure the collector, <a
					href="slant-collectd.8.html">slant-collectd</a> is running
				and <a href="https://man.openbsd.org/slowcgi">slowcgi</a> (for 
				OpenBSD) is properly configured.
				You'll need <a
					href="https://kristaps.bsd.lv/kwebapp">kwebapp</a>
				to build the system.
			</p>
			<p>
				For upgrading the database between versions or installing the
				initial database, make sure to run <a
					href="slant-upgrade.8.html">slant-upgrade</a>.
				Make sure that the CGI script isn't accessable before you do so, or
				you may have new CGI sources and an old database schema.
			</p>
			<h2 id="news">news</h2>
			<nav data-sblg-nav="1" data-sblg-navcontent="1">
				<header>
					${sblg-date}: ${sblg-titletext}
				</header>
				<div>
					${sblg-aside}
				</div>
			</nav>
			<h2 id="about">about</h2>
			<p>
				<span class="nm">Slant</span> was built to provide simple monitoring of a set of systems.
				The operative term being <i>simple</i>, both to deploy and to actually monitor.
				Development is generously sponsored by CAPEM Solutions, Inc.&#8212;thank you!
			</p>
		</article>
		<footer>
			<div>
				&#169; 2018, CAPEM Solutions Inc.
			</div>
		</footer>
	</body>
</html>
