.\"	$Id$
.\"
.\" Copyright (c) 2018 Kristaps Dzonsons <kristaps@bsd.lv>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate$
.Dt SLANT-CGI 8
.Os
.Sh NAME
.Nm slant-cgi
.Nd CGI program returning slant data
.Sh SYNOPSIS
.Nm slant-cgi
.Sh DESCRIPTION
The
.Nm
utility produces system statistics as recorded by
.Xr slant-collectd 8 .
It interfaces with the database by default in
.Pa /var/www/data/slant.db .
.Pp
The CGI program accepts HTTP GET requests for the
.Pa /index.json
resource, which has the aliases
.Pa /index ,
.Pa / ,
or the empty request.
Other resources return an HTTP code 404.
Non-GET request return an HTTP code 405.
Other (non-200) codes are possible and follow standard definitions.
.Pp
On success,
.Nm
returns an HTTP code 200 and a valid JSON document.
.Pp
The document consists of the following.
In this description, integers
.Pq Li int
are serialised from 64-bit signed numbers.
Real-valued numbers
.Pq Li real
are serialised from double-precision numbers.
.Bd -literal
{   version: "x.y.z",
  timestamp: int,
     system: { system },
       qmin: [ records... ],
        min: [ records... ],
       hour: [ records... ],
        day: [ records... ],
       week: [ records... ],
       year: [ records... ] 
}
.Ed
.Pp
The
.Li version
is the software suite version.
This is informational.
.Pp
The
.Li system
object consists of system information:
.Bd -literal
{      boot: int,
    machine: string,
  osversion: string,
  osrelease: string,
    sysname: string
}
.Ed
.Pp
It consists only of
.Li boot ,
the UNIX epoch value for when the system was last booted.
The
.Li machine ,
.Li osversion ,
.Li osrelease ,
and
.Li sysname
mirror the return values of
.Xr uname 1 .
.Pp
The remaining values are the possibly-empty sets of records accumulated
over a given interval of time in quarter-minute quanta.
So each
.Li qmin
record consists of exactly one entry; each
.Li min
record consists of at least one and at most four entries, one for each
quarter-minute; each
.Li hour
has at most 240, etc.
.Pp
There are finite records (except for yearly ones) bound to a circular
buffer per interval.
When a record is filled, such as with four quarter-minute entries into a
minute record, the next entry creates a new record with one entry while
the oldest is discarded.
.Pp
The circular buffer is large enough for a reasonable glimpse into the
past, with emphasis placed on recent data: 40 quarter-minute records (10
minutes), 300 minute records (5 hours), 96 hourly (5 days), 28 daily (4
weeks), 104 weekly (two years), endless yearly entries.
.Pp
Each record consists of the following:
.Bd -literal
{    ctime: int,
   entries: int,
       cpu: real,
       mem: real,
     netrx: int,
     nettx: int,
  discread: int,
 discwrite: int,
    nprocs: real,
    rprocs: real,
    nfiles: real,
  interval: int,
        id: int 
}
.Ed
.Pp
The fields are defined as follows:
.Bl -tag -width Ds
.It Li ctime
a UNIX epoch of when the record was started (first entry)
.It Li entries
the number of entries, so front-end displays will need to average all
data by this number
.It Li cpu
average processor utilisation over all processing unit
.It Li mem
active memory over all available memory
.It Li netrx
bytes received per second over all interfaces
.It Li nettx
bytes transmitted per second over all interfaces
.It Li discread
bytes read per second over all configured devices
.It Li discwrite
bytes written per second over all configured devices
.It Li nprocs
number of running processes over all possible processes
.It Li rprocs
number of configured processes running over total configured
.It Li nfiles
number of open files over all possible open files
.It Li interval
the type of interval starting with zero for quarter-minute, one fo 
minute, etc.
.It Li id
a unique record identifier
.El
.\" The following requests should be uncommented and used where appropriate.
.\" .Sh CONTEXT
.\" For section 9 functions only.
.\" .Sh RETURN VALUES
.\" For sections 2, 3, and 9 function return values only.
.\" .Sh ENVIRONMENT
.\" For sections 1, 6, 7, and 8 only.
.\" .Sh FILES
.\" .Sh EXIT STATUS
.\" For sections 1, 6, and 8 only.
.\" .Sh EXAMPLES
.\" .Sh DIAGNOSTICS
.\" For sections 1, 4, 6, 7, 8, and 9 printf/stderr messages only.
.\" .Sh ERRORS
.\" For sections 2, 3, 4, and 9 errno settings only.
.Sh SEE ALSO
.Xr slant 1 ,
.Xr slant-collectd 8
.\" .Sh STANDARDS
.\" .Sh HISTORY
.\" .Sh AUTHORS
.\" .Sh CAVEATS
.\" .Sh BUGS
